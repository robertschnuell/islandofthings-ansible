server {
  listen 80;
  server_name {{ nginx_fqdn | default(ansible_fqdn) }};
  return 301 https://{{ nginx_fqdn_etherpad | default(ansible_fqdn) }}$request_uri;
}


server {
  listen 443 ssl;
  server_name {{ nginx_fqdn | default(ansible_fqdn) }};

  #ssl_certificate /etc/letsencrypt/live/{{ nginx_fqdn | default(ansible_fqdn) }}/fullchain.pem;
  #ssl_certificate_key /etc/letsencrypt/live/{{ nginx_fqdn | default(ansible_fqdn) }}/privkey.pem;

  location / {
    rewrite ^/$ / break;
    rewrite ^/locales/(.*) /locales/$1 break;
    rewrite ^/locales.json /locales.json break;
    rewrite ^/admin$ /admin/ break;
    rewrite ^/admin/(.*) /admin/$1 break;
    rewrite ^/plugins$ /admin/plugins break;
    rewrite ^/plugins/(.*) /admin/plugins/$1 break;
    rewrite ^/settings$ /admin/settings break;
    rewrite ^/pads$ /admin/pads break;
    rewrite ^/p/(.*) /p/$1 break;
    rewrite ^/static/(.*) /static/$1 break;
    rewrite ^/pluginfw/(.*) /pluginfw/$1 break;
    rewrite ^/javascripts/(.*) /javascripts/$1 break;
    rewrite ^/socket.io/(.*) /socket.io/$1 break;
    rewrite ^/ep/(.*) /ep/$1 break;
    rewrite ^/minified/(.*) /minified/$1 break;
    rewrite ^/api/(.*) /api/$1 break;
    rewrite ^/ro/(.*) /ro/$1 break;
    rewrite ^/error/(.*) /error/$1 break;
    rewrite ^/jserror(.*) /jserror$1 break;
    rewrite ^/redirect(.*) /redirect$1 break;
    rewrite /favicon.ico /favicon.ico break;
    rewrite /robots.txt /robots.txt break;
    rewrite /(.*) /p/$1;

    proxy_buffering off;

    proxy_http_version 1.1;

    proxy_pass http://10.0.0.3:9001;
    proxy_pass_header Server;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    add_header Content-Security-Policy "frame-ancestors 'self' https://*.grid.valentinswerder.de https://*.element.io https://*.vector.im";
  }
}

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}
